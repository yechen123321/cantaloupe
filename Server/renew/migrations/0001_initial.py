# Generated by Django 5.0.3 on 2024-03-30 00:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricFieldModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=100, null=True, verbose_name='省级')),
                ('station_type', models.CharField(choices=[('综合性发电', '综合性发电'), ('火力发电', '火力发电'), ('水力发电', '水力发电'), ('风力发电', '风力发电'), ('太阳能发电', '太阳能发电')], max_length=100, verbose_name='电场类型')),
                ('station_name', models.CharField(max_length=100, null=True, verbose_name='电场名称')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='故障时间')),
            ],
            options={
                'verbose_name_plural': '电场信息',
            },
        ),
        migrations.CreateModel(
            name='ElectricFieldFaultModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('malfunction_reason', models.CharField(max_length=100, verbose_name='故障原因')),
                ('send_times', models.IntegerField(default=0, verbose_name='通知维修次数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('electric_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='renew.electricfieldmodel', verbose_name='电场信息')),
            ],
            options={
                'verbose_name_plural': '电场故障',
            },
        ),
        migrations.CreateModel(
            name='MainEnergyProductionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('北京', '北京'), ('天津', '天津'), ('河北', '河北'), ('山西', '山西'), ('内蒙古', '内蒙古'), ('辽宁', '辽宁'), ('吉林', '吉林'), ('黑龙江', '黑龙江'), ('上海', '上海'), ('江苏', '江苏'), ('浙江', '浙江'), ('安徽', '安徽'), ('福建', '福建'), ('江西', '江西'), ('山东', '山东'), ('河南', '河南'), ('湖北', '湖北'), ('湖南', '湖南'), ('广东', '广东'), ('广西', '广西'), ('海南', '海南'), ('重庆', '重庆'), ('四川', '四川'), ('贵州', '贵州'), ('云南', '云南'), ('西藏', '西藏'), ('陕西', '陕西'), ('甘肃', '甘肃'), ('青海', '青海'), ('宁夏', '宁夏'), ('新疆', '新疆')], max_length=100, verbose_name='行政单位')),
                ('year', models.IntegerField(default=2000, unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('raw_coal', models.DecimalField(decimal_places=1, default=1.0, help_text='万吨', max_digits=10, verbose_name='原煤')),
                ('crude_oil', models.DecimalField(decimal_places=1, default=1.0, help_text='万吨', max_digits=10, verbose_name='原油')),
                ('fire_power', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='火力发电量')),
                ('water_power', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='水力发电量')),
                ('wind_power', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='风力发电量')),
                ('sun_power', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='太阳能发电量')),
                ('nuclear_power', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='核能发电量')),
                ('all_power', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='总发电量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '规模以上企业主要能源产量',
                'unique_together': {('year', 'region')},
            },
        ),
    ]
