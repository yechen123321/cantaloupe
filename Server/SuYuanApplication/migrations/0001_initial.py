# Generated by Django 5.0.3 on 2024-04-23 01:43

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, verbose_name='请求路径')),
                ('request_time', models.DateTimeField(auto_now_add=True, verbose_name='请求时间')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyConsumptionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('total_energy_consumption', models.DecimalField(decimal_places=2, default=1.0, help_text='万吨标准煤', max_digits=10, verbose_name='能源消费总量')),
                ('coal', models.DecimalField(decimal_places=1, default=1.0, help_text='%', max_digits=3, verbose_name='煤炭占比')),
                ('petroleum', models.DecimalField(decimal_places=1, default=1.0, help_text='%', max_digits=3, verbose_name='石油占比')),
                ('natural_gas', models.DecimalField(decimal_places=1, default=1.0, help_text='%', max_digits=3, verbose_name='天然气占比')),
                ('power_and_other', models.DecimalField(decimal_places=1, default=1.0, help_text='%', max_digits=3, verbose_name='一次电力及其他能源')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '能源消耗水平',
            },
        ),
        migrations.CreateModel(
            name='EnergyDevelopAndDemandModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('north_China_dm', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(需求)', max_digits=10, verbose_name='华北')),
                ('northeast_dm', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(需求)', max_digits=10, verbose_name='东北')),
                ('east_China_dm', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(需求)', max_digits=10, verbose_name='华东')),
                ('central_South_dm', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(需求)', max_digits=10, verbose_name='中南')),
                ('southwest_dm', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(需求)', max_digits=10, verbose_name='西南')),
                ('northwest_dm', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(需求)', max_digits=10, verbose_name='西北')),
                ('north_China_dv', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(开发)', max_digits=10, verbose_name='华北')),
                ('northeast_dv', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(开发)', max_digits=10, verbose_name='东北')),
                ('east_China_dv', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(开发)', max_digits=10, verbose_name='华东')),
                ('central_South_dv', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(开发)', max_digits=10, verbose_name='中南')),
                ('southwest_dv', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(开发)', max_digits=10, verbose_name='西南')),
                ('northwest_dv', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦(开发)', max_digits=10, verbose_name='西北')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '全国能源开发与需求',
            },
        ),
        migrations.CreateModel(
            name='EnergyImportAndExportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('petroleum_i', models.DecimalField(decimal_places=2, default=1.0, help_text='进口（万吨）', max_digits=10, verbose_name='石油')),
                ('coal_i', models.DecimalField(decimal_places=2, default=1.0, help_text='进口（万吨）', max_digits=10, verbose_name='煤炭')),
                ('power_i', models.DecimalField(decimal_places=2, default=1.0, help_text='进口（亿千瓦时）', max_digits=10, verbose_name='电力')),
                ('petroleum_e', models.DecimalField(decimal_places=2, default=1.0, help_text='出口（万吨）', max_digits=10, verbose_name='石油')),
                ('coal_e', models.DecimalField(decimal_places=2, default=1.0, help_text='出口（万吨）', max_digits=10, verbose_name='煤炭')),
                ('power_e', models.DecimalField(decimal_places=2, default=1.0, help_text='出口（亿千瓦时）', max_digits=10, verbose_name='电力')),
                ('all_i', models.DecimalField(decimal_places=2, default=1.0, help_text='进口（万吨标准煤）', max_digits=10, verbose_name='可供消费的能源总量')),
                ('all_e', models.DecimalField(decimal_places=2, default=1.0, help_text='出口（万吨标准煤）', max_digits=10, verbose_name='可供消费的能源总量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '能源进出口量',
            },
        ),
        migrations.CreateModel(
            name='EnergyProductionAndInventoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('total_energy_available_for_consumption', models.DecimalField(decimal_places=2, default=1.0, help_text='万吨标准煤', max_digits=10, verbose_name='可供消费的能源总量')),
                ('total_production_of_primary_energy', models.DecimalField(decimal_places=2, default=1.0, help_text='万吨标准煤', max_digits=10, verbose_name='一次能源生产总量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '能源平衡总和',
            },
        ),
        migrations.CreateModel(
            name='EnergyReserveModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('range', models.CharField(choices=[('全国', '全国'), ('全球', '全球')], default='全球', max_length=10, verbose_name='统计范围')),
                ('coal', models.DecimalField(decimal_places=2, default=1.0, help_text='万亿吨', max_digits=10, verbose_name='煤炭')),
                ('petroleum', models.DecimalField(decimal_places=2, default=1.0, help_text='亿吨', max_digits=10, verbose_name='石油')),
                ('natural_gas', models.DecimalField(decimal_places=2, default=1.0, help_text='万亿立方米', max_digits=10, verbose_name='天然气')),
                ('geothermal', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='地热')),
                ('wind', models.DecimalField(decimal_places=2, default=1.0, help_text='亿千瓦', max_digits=10, verbose_name='风能')),
                ('sun', models.DecimalField(decimal_places=2, default=1.0, help_text='亿千瓦', max_digits=10, verbose_name='太阳能')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '全国能源储量统计',
            },
        ),
        migrations.CreateModel(
            name='MarketInvestmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('energy_investment', models.DecimalField(decimal_places=2, default=1.0, help_text='亿元', max_digits=10, verbose_name='能源重点项目投资')),
                ('new_energy_storage_projects_power', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦(功率)', max_digits=10, verbose_name='投运新型储能项目累计装机规模')),
                ('new_energy_storage_projects', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦时(电量)', max_digits=10, verbose_name='投运新型储能项目累计装机规模')),
                ('electricity_trading', models.DecimalField(decimal_places=2, default=1.0, help_text='百亿千瓦时', max_digits=10, verbose_name='电力市场交易电量')),
                ('coal_methane', models.DecimalField(decimal_places=2, default=1.0, help_text='亿立方米', max_digits=10, verbose_name='煤层气产量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '全国市场交易及投资建设',
            },
        ),
        migrations.CreateModel(
            name='NewEnergyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('energy_type', models.CharField(choices=[('太阳能源', '太阳能源'), ('风力能源', '风力能源'), ('水利能源', '水利能源'), ('生物质能', '生物质能'), ('其他能源', '其他能源')], default='其他能源', max_length=50, verbose_name='能源类型')),
                ('value', models.DecimalField(decimal_places=1, default=1.0, help_text='亿千瓦时', max_digits=10, verbose_name='产量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '新能源结构及趋势',
            },
        ),
        migrations.CreateModel(
            name='PowerGenerationInstalledCapacityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2000, unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('thermal_power', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='火电')),
                ('hydropower', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='水电')),
                ('nuclear_power', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='核电')),
                ('wind_power', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='风电')),
                ('solar_power_generation', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='太阳能发电')),
                ('other_power', models.DecimalField(decimal_places=2, default=1.0, help_text='万千瓦', max_digits=10, verbose_name='其他')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '发电装机容量',
            },
        ),
        migrations.CreateModel(
            name='MineralDevelopmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('北京', '北京'), ('天津', '天津'), ('河北', '河北'), ('山西', '山西'), ('内蒙古', '内蒙古'), ('辽宁', '辽宁'), ('吉林', '吉林'), ('黑龙江', '黑龙江'), ('上海', '上海'), ('江苏', '江苏'), ('浙江', '浙江'), ('安徽', '安徽'), ('福建', '福建'), ('江西', '江西'), ('山东', '山东'), ('河南', '河南'), ('湖北', '湖北'), ('湖南', '湖南'), ('广东', '广东'), ('广西', '广西'), ('海南', '海南'), ('重庆', '重庆'), ('四川', '四川'), ('贵州', '贵州'), ('云南', '云南'), ('西藏', '西藏'), ('陕西', '陕西'), ('甘肃', '甘肃'), ('青海', '青海'), ('宁夏', '宁夏'), ('新疆', '新疆')], max_length=100, verbose_name='行政单位')),
                ('year', models.IntegerField(default=2000, unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2099)], verbose_name='年份')),
                ('coal', models.DecimalField(decimal_places=2, default=1.0, help_text='亿吨', max_digits=10, verbose_name='煤炭')),
                ('petroleum', models.DecimalField(decimal_places=2, default=1.0, help_text='亿吨', max_digits=10, verbose_name='石油')),
                ('gas', models.DecimalField(decimal_places=2, default=1.0, help_text='亿立方米', max_digits=10, verbose_name='天然气')),
                ('coalbed_methane', models.DecimalField(decimal_places=2, default=1.0, help_text='亿立方米', max_digits=10, verbose_name='煤层气')),
                ('shale_gas', models.DecimalField(decimal_places=2, default=1.0, help_text='亿立方米', max_digits=10, verbose_name='页岩气')),
                ('iron', models.DecimalField(decimal_places=2, default=1.0, help_text='亿吨', max_digits=10, verbose_name='铁矿')),
                ('manganese', models.DecimalField(decimal_places=2, default=1.0, help_text='亿吨', max_digits=10, verbose_name='锰矿')),
                ('ferrochrome', models.DecimalField(decimal_places=2, default=1.0, help_text='亿吨', max_digits=10, verbose_name='铬铁矿')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '矿产开发产量',
                'unique_together': {('year', 'region')},
            },
        ),
    ]
